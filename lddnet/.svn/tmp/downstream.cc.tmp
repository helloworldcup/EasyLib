#include <boost/bind.hpp>
#include <glog/logging.h>

#include "downstream.h"
#include "internal/downstream_impl.h"
#include "channel.h"

namespace ldd { namespace net {

DownStream::DownStream(EventRunner* event_runner
        , ChannelHandler channel_handler
        , const Option &option)
{
    impl_ = new Impl(this
            , event_runner
            , channel_handler
            , option);
}
DownStream::DownStream(EventRunner *listen_event_runner
        , EventRunnerGroup *work_event_runner_group
        , ChannelHandler channel_handler
        , const Option &option)
{
    impl_ = new Impl(this
            , listen_event_runner
            , work_event_runner_group
            , channel_handler
            , option);
}

DownStream::~DownStream()
{
    if (impl_ != NULL) {
        delete impl_;
        impl_ = NULL;
    }
}


bool DownStream::Init()
{
    return impl_->Init();
}

void DownStream::Open()
{
    impl_->Open();
}

void DownStream::Close()
{
    impl_->Close();
}

} /*namespace net*/
} /*namespace ldd*/

