#include <glog/logging.h>
#include <boost/bind.hpp>
#include "channel.h"
#include "internal/channel_impl.h"
#include "internal/packet.h"
#include "outgoing_msg.h"
#include "incoming_msg.h"

namespace ldd { namespace net {

Channel::Channel() 
    : impl_(NULL)
{}

Channel::~Channel()
{
    //LOG(INFO) << "Channel::~Channel: called";
    delete impl_;

    return;
}

void Channel::Close()
{
    impl_->Close();
}

bool Channel::Send(OutgoingMsg *msg)
{
    return impl_->Send(msg);
}

const std::string& Channel::remote_address() const
{
    return impl_->remote_address();
}

int Channel::remote_port() const
{
    return impl_->remote_port();
}

const std::string& Channel::local_address() const
{
    return impl_->local_address();
}

int Channel::local_port() const
{
    return impl_->local_port();
}

bool Channel::good() const
{
    return impl_->good();
} 

EventRunner *Channel::runner()
{
    return impl_->runner();
}

} /*namespace net*/
} /*namespace ldd*/

