// downstream_impl.h (2013-06-06)
// Yan Gaofeng (yangaofeng@360.cn)
#include <boost/interprocess/sync/file_lock.hpp>
#ifndef LDD_NET_INTERNAL_DOWNSTRAM_IMPL_H_
#define LDD_NET_INTERNAL_DOWNSTRAM_IMPL_H_

#include "ldd/net/internal/nob_acceptor.h"
#include "ldd/net/downstream.h"

namespace ldd  { namespace net {

class DownStream::Impl {
public:
    Impl(DownStream *downstream
        , EventRunner *runner
        , ChannelHandler channel_handler
        , const Option &option);

    Impl(DownStream *downstream
        , EventRunner *runner
        , EventRunnerGroup *runner_group
        , ChannelHandler channel_handler
        , const Option &option);

    ~Impl();

    bool Init();
    void Open();
    void Close();

private:
    void Accept1();
    void Accept2();
    void HandleAccept1(const boost::system::error_code& e); 
    void HandleAccept2(const boost::system::error_code& e); 

    void AcceptDelay();
    void HandleAcceptDelay(const boost::system::error_code &error);
private:
    DownStream *downstream_;
    EventRunner *runner_;
    EventRunnerGroup *runner_group_;
    ChannelHandler channel_handler_;

    nob_acceptor acceptor_;
    boost::shared_ptr<Channel> new_channel_;

    Option option_;
    boost::interprocess::file_lock *accept_lock_;
    boost::asio::deadline_timer accept_timer_;
    bool accept_lock_held_;
    int accept_count_;
};

} /*net*/
} /*ldd*/

#endif // LDD_NET_INTERNAL_DOWNSTRAM_IMPL_H_
