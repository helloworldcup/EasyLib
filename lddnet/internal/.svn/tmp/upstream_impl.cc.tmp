#include <glog/logging.h>
#include "ldd/net/channel.h"
#include "ldd/net/internal/channel_impl.h"
#include "upstream_impl.h"
#include "event_runner_impl.h"

namespace ldd { namespace net {

boost::shared_ptr<Channel> UpStream::Impl::Connect(
        const std::string &host, int port)
{
    boost::shared_ptr<Channel> channel;

    EventRunner *event_runner = runner_;
    if (event_runner == NULL) {
        CHECK_NOTNULL(runner_group_);
        event_runner = runner_group_->GetEventRunner();
        CHECK_NOTNULL(event_runner);
    }

    //客户端不需要关心Channel的打开和关闭事件
    //，所以Channel构造函数的第五个参数传空即可
    channel.reset(new Channel());
    channel->impl_ = new Channel::Impl(channel.get()
            , event_runner 
            , event_runner->impl_->ios()
            , upstream_
            , heartbeat_interval_
            , NULL);

    channel->impl_->Open(host, port);

    return channel;
}

} /*net*/
} /*ldd*/

