// incoming_msg_registry.h (2013-05-29)
// Li Xinjie (xjason.li@gmail.com)

#ifndef LDD_NET_INCOMING_MSG_REGISTRY_H_
#define LDD_NET_INCOMING_MSG_REGISTRY_H_

#include "registry.h"
#include "protocol.h"
#include "incoming_msg.h"

namespace ldd {
namespace net {

class IncomingMsgRegistry : private Registry<IncomingMsg, MsgType> {
public:
    virtual ~IncomingMsgRegistry() {}
    template <class Msg>
    void RegisterIncomingMsg() { Register<Msg>(Msg::kType); }
    template <class Msg, class A1>
    void RegisterIncomingMsg(A1 a1) { Register<Msg>(Msg::kType, a1); }
    template <class Msg, class A1, class A2>
    void RegisterIncomingMsg(A1 a1, A2 a2) { Register<Msg>(Msg::kType, a1, a2); }
    template <class Msg, class A1, class A2, class A3>
    void RegisterIncomingMsg(A1 a1, A2 a2, A3 a3) { Register<Msg>(Msg::kType, a1, a2, a3); }
    template <class Msg, class A1, class A2, class A3, class A4>
    void RegisterIncomingMsg(A1 a1, A2 a2, A3 a3, A4 a4) { Register<Msg>(Msg::kType, a1, a2, a3, a4); }
    template <class Msg, class A1, class A2, class A3, class A4, class A5>
    void RegisterIncomingMsg(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5) { Register(Msg::kType, a1, a2, a3, a4, a5); }
    template <class Msg, class A1, class A2, class A3, class A4, class A5, class A6>
    void RegisterIncomingMsg(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6) { Register(Msg::kType, a1, a2, a3, a4, a5, a6); }
    template <class Msg, class A1, class A2, class A3, class A4, class A5, class A6, class A7>
    void RegisterIncomingMsg(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7) { Register(Msg::kType, a1, a2, a3, a4, a5, a6, a7); }
    template <class Msg, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8>
    void RegisterIncomingMsg(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8) { Register(Msg::kType, a1, a2, a3, a4, a5, a6, a7, a8); }
    template <class Msg, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9>
    void RegisterIncomingMsg(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8, A9 a9) { Register(Msg::kType, a1, a2, a3, a4, a5, a6, a7, a8, a9); }
    template <class Msg, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9, class A10>
    void RegisterIncomingMsg(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8, A9 a9, A10 a10) { Register(Msg::kType, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10); }

    IncomingMsg* NewIncomingMsg(MsgType t) { return New(t); }
};

} // namespace net
} // namespace ldd

#endif // LDD_NET_INCOMING_MSG_REGISTRY_H_

