#ifndef __C2P_LIST_H__
#define __C2P_LIST_H__

#include "ldd/util/atomic.h"

#include "ldd/net/buffer.h"
#include "ldd/net/incoming_msg.h"

#include "ldd/protocol/common.h"
#include "ldd/protocol/proto.h"
#include "ldd/protocol/response.h"

class Proxy;
class P2SList;

class C2PList: public ldd::net::IncomingMsg {
public:
    C2PList(Proxy *proxy);
    virtual ~C2PList();

    DECLARE_INCOMING_MSG_TYPE(LDD_CLIENT_2_PROXY_LIST);

    virtual bool ParseFrom(const ldd::net::Buffer &buff
            , const std::map<int8_t, ldd::net::Buffer>& extras);

    virtual void HandleCancel();

    void SendRequest();
    void SendResult();

private:
    friend class P2SList;
    Proxy *proxy_;
    std::size_t hash_val_;
    int namespace_id_;
    int bucket_id_;
    int farm_id_;
    ldd::protocol::ListMessage req_;
    ldd::protocol::GetOrListResponse res_;
    ldd::util::Atomic<P2SList *> p2s_list_;
};

#endif /*__C2P_LIST_H__*/

